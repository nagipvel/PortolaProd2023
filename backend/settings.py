"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

os.environ['HTTPS'] = os.environ.get("HTTPS", default="on")
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# need to check this before golive:
# TOKEN_EXPIRED_AFTER_SECONDS = 86400
TOKEN_EXPIRED_AFTER_SECONDS = 1209600

# TOKEN_EXPIRED_AFTER_SECONDS = 300
CORS_ORIGIN_ALLOW_ALL = True

DATA_UPLOAD_MAX_MEMORY_SIZE = 62914560
FILE_UPLOAD_MAX_MEMORY_SIZE = 62914560
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100000
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '943$p8oc*=pd-ol2=e!u)g-txo-p(iz9a+ea&g#ofuvns_3q(5'
ENCRYPT_KEY = b'2faW0g61jp_0WdGqZbwo1iYWfoU1COCCULI0PDvsOpk='
# SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# This setting keeps DEBUG = True on all servers EXCEPT PortolaPROD
DEBUG = (os.environ.get('WEBSITE_SITE_NAME') != 'PortolaPROD' )


if not DEBUG:
    SECURE_SSL_REDIRECT = True # [1]
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    CLIENT_HOST = 'https://portal.pvel.com'

    # production email setting:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.office365.com'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'support@pvel.com'
    EMAIL_HOST_PASSWORD = 'Wow41040'
    EMAIL_USE_TLS = True
    EMAIL_USE_SSL = False
else:
    TMP_ROOT = os.path.join(BASE_DIR, 'portola','tmp')
    CLIENT_HOST = 'http://localhost:3000'
    # local email storage
    EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
    EMAIL_FILE_PATH =os.path.join(TMP_ROOT, 'app-messages') # change this to a proper location

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = [os.environ['WEBSITE_SITE_NAME'] + '.azurewebsites.net', '127.0.0.1'] if 'WEBSITE_SITE_NAME' in os.environ else ['localhost', '127.0.0.1', '[::1]']
#ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_filters',
    'portola.apps.PortolaConfig',
    'rest_framework_tracking',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'



#DEBUG Setting:

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# Local sqlite3 no longer supported
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DBNAME','portoladevdb'),
        'HOST': os.environ.get('DBHOST','localhost'),
        'USER': os.environ.get('DBUSER','manager'),
        'PASSWORD': os.environ.get('DBPASS','supersecretpass'),
        "PORT": os.environ.get("DBPORT", "5432"),
        # 'OPTIONS': {'sslmode': 'require'},
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/pacifica/'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'portola.authentication.ExpiringTokenAuthentication',  # custom authentication class
        # 'rest_framework.authentication.TokenAuthentication', # May be the right way to go.
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework_filters.backends.RestFrameworkFilterBackend',
        'rest_framework_filters.backends.ComplexFilterBackend',
        'rest_framework.filters.OrderingFilter',
        # 'django_filters.rest_framework.DjangoFilterBackend'
        ],
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_PAGINATION_CLASS': 'portola.pagination.CustomPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# This should be replaced with the cache system when we're there
MEDIA_URL =  '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
